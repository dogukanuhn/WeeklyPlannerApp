[{"D:\\react\\weekly-planner\\src\\index.js":"1","D:\\react\\weekly-planner\\src\\App.js":"2","D:\\react\\weekly-planner\\src\\reportWebVitals.js":"3","D:\\react\\weekly-planner\\src\\pages\\Home\\index.js":"4","D:\\react\\weekly-planner\\src\\components\\Layout\\index.js":"5","D:\\react\\weekly-planner\\src\\components\\Header\\index.js":"6","D:\\react\\weekly-planner\\src\\components\\Button\\index.js":"7","D:\\react\\weekly-planner\\src\\components\\Input\\index.js":"8","D:\\react\\weekly-planner\\src\\components\\Card\\index.js":"9","D:\\react\\weekly-planner\\src\\components\\Select\\index.js":"10","D:\\react\\weekly-planner\\src\\pages\\Auth\\index.js":"11","D:\\react\\weekly-planner\\src\\helpers\\setAuthorizationToken.js":"12","D:\\react\\weekly-planner\\src\\services\\authService.js":"13","D:\\react\\weekly-planner\\src\\PrivateRoute.js":"14","D:\\react\\weekly-planner\\src\\pages\\Dashboard\\index.js":"15","D:\\react\\weekly-planner\\src\\components\\Board\\index.js":"16","D:\\react\\weekly-planner\\src\\helpers\\apiUtils.js":"17","D:\\react\\weekly-planner\\src\\rtk\\store.js":"18","D:\\react\\weekly-planner\\src\\rtk\\auth\\authSlice.js":"19"},{"size":567,"mtime":1628331352152,"results":"20","hashOfConfig":"21"},{"size":1275,"mtime":1628333359545,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":4131,"mtime":1613925023527,"results":"24","hashOfConfig":"21"},{"size":368,"mtime":1613924942407,"results":"25","hashOfConfig":"21"},{"size":215,"mtime":1613513944203,"results":"26","hashOfConfig":"21"},{"size":290,"mtime":1613925503795,"results":"27","hashOfConfig":"21"},{"size":268,"mtime":1613925412790,"results":"28","hashOfConfig":"21"},{"size":1192,"mtime":1613860724077,"results":"29","hashOfConfig":"21"},{"size":256,"mtime":1613599933184,"results":"30","hashOfConfig":"21"},{"size":2060,"mtime":1628335055689,"results":"31","hashOfConfig":"21"},{"size":235,"mtime":1613933006874,"results":"32","hashOfConfig":"21"},{"size":668,"mtime":1613854859912,"results":"33","hashOfConfig":"21"},{"size":455,"mtime":1613685173497,"results":"34","hashOfConfig":"21"},{"size":2105,"mtime":1614371460079,"results":"35","hashOfConfig":"21"},{"size":8247,"mtime":1614373901080,"results":"36","hashOfConfig":"21"},{"size":0,"mtime":1613933373821,"results":"37","hashOfConfig":"21"},{"size":178,"mtime":1628331914574,"results":"38","hashOfConfig":"21"},{"size":1463,"mtime":1628335054050,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"mvznvr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\weekly-planner\\src\\index.js",[],["84","85"],"D:\\react\\weekly-planner\\src\\App.js",["86"],"import './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport React, { useLayoutEffect } from 'react'\nimport Home from 'pages/Home'\nimport Dashboard from 'pages/Dashboard'\n\nimport Layout from 'components/Layout'\nimport Auth from 'pages/Auth'\nimport PrivateRoute from 'PrivateRoute'\nimport jwtDecode from 'jwt-decode'\nimport { useDispatch } from 'react-redux'\nimport { logout, authSuccess } from 'rtk/auth/authSlice'\nimport { setAuthorizationToken } from 'helpers/setAuthorizationToken'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const jwtToken = localStorage.getItem('jwtToken')\n\n  useLayoutEffect(() => {\n    const userInfo = () => {\n      setAuthorizationToken(jwtToken)\n      return jwtDecode(jwtToken)\n    }\n\n    dispatch(jwtToken ? authSuccess(userInfo()) : logout())\n  }, [])\n\n  return (\n    <Router>\n      <Layout>\n        {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n\n          <Route path=\"/auth/:email/:accessGuid\" component={Auth} />\n          <PrivateRoute path=\"/dash\" component={Dashboard} />\n        </Switch>\n      </Layout>\n    </Router>\n  )\n}\n\nexport default App\n","D:\\react\\weekly-planner\\src\\reportWebVitals.js",[],"D:\\react\\weekly-planner\\src\\pages\\Home\\index.js",[],"D:\\react\\weekly-planner\\src\\components\\Layout\\index.js",[],"D:\\react\\weekly-planner\\src\\components\\Header\\index.js",[],"D:\\react\\weekly-planner\\src\\components\\Button\\index.js",[],"D:\\react\\weekly-planner\\src\\components\\Input\\index.js",[],"D:\\react\\weekly-planner\\src\\components\\Card\\index.js",[],"D:\\react\\weekly-planner\\src\\components\\Select\\index.js",[],"D:\\react\\weekly-planner\\src\\pages\\Auth\\index.js",["87"],"D:\\react\\weekly-planner\\src\\helpers\\setAuthorizationToken.js",[],"D:\\react\\weekly-planner\\src\\services\\authService.js",["88"],"import axios from 'axios'\r\nimport { setAuthorizationToken } from 'helpers/setAuthorizationToken'\r\n\r\nconst Authenticate = (authData) => {\r\n  return axios\r\n    .post(`https://localhost:5001/api/user/Authenticate`, {\r\n      accessCode: authData.accessCode,\r\n      email: authData.email,\r\n      accessGuid: authData.accessGuid\r\n    })\r\n    .then((x) => {\r\n      if (!x.data.hasError) {\r\n        localStorage.setItem('jwtToken', x.data.token)\r\n        setAuthorizationToken(x.data.token)\r\n      }\r\n      return x.data\r\n    })\r\n}\r\n\r\nconst Logout = () => {\r\n  localStorage.removeItem('jwtToken')\r\n  setAuthorizationToken(false)\r\n}\r\n\r\nexport default { Authenticate, Logout }\r\n",["89","90"],"D:\\react\\weekly-planner\\src\\PrivateRoute.js",[],"D:\\react\\weekly-planner\\src\\pages\\Dashboard\\index.js",["91"],"import axios from 'axios'\r\nimport Board from 'components/Board'\r\nimport Button from 'components/Button'\r\nimport Input from 'components/Input'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useSelector } from 'react-redux'\r\nimport styles from './dash.module.css'\r\nexport default function Index() {\r\n  const user = useSelector((state) => state['auth'].user)\r\n\r\n  const [selectedTeam, setSelectedTeam] = useState(0)\r\n\r\n  const [boards, setBoards] = useState([])\r\n\r\n  const { register, handleSubmit } = useForm()\r\n\r\n  const getTeams = () => {\r\n    axios.get('https://localhost:5001/api/Dashboard/teams').then((x) => {\r\n      if (!x.data.hasError) setBoards(x.data.teams)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getTeams()\r\n  }, [])\r\n\r\n  const createDashboard = (data) => {\r\n    console.log(data.teamName)\r\n    axios\r\n      .post('https://localhost:5001/api/Dashboard', {\r\n        team: data.teamName,\r\n        tables: ['Yapılacaklar', 'Tamamlanmış']\r\n      })\r\n      .then((x) => {\r\n        if (!x.data.hasError) {\r\n          getTeams()\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <div className={styles.team}>\r\n        <div>\r\n          <form id=\"1\" onSubmit={handleSubmit(createDashboard)}>\r\n            <Input\r\n              className={styles.teamInput}\r\n              name=\"teamName\"\r\n              placeholder=\"Takım Adı\"\r\n              referance={register({ required: true })}\r\n            />\r\n            <Button className={styles.addTeamButton}>Takım Ekle</Button>\r\n          </form>\r\n        </div>\r\n        <div></div>\r\n        <div className={styles.teams}>\r\n          {boards &&\r\n            boards.map((x, i) => {\r\n              return (\r\n                <Button\r\n                  className={selectedTeam === i && styles.selectedTab}\r\n                  onClick={(x) => setSelectedTeam(i)}\r\n                >\r\n                  {x}\r\n                </Button>\r\n              )\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      <Board team={boards[selectedTeam]} />\r\n    </div>\r\n  )\r\n}\r\n","D:\\react\\weekly-planner\\src\\components\\Board\\index.js",["92","93","94"],"import React, { useEffect, useState } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport axios from 'axios'\r\nimport styles from './board.module.css'\r\nimport Button from 'components/Button'\r\nimport Input from 'components/Input'\r\nimport { useForm } from 'react-hook-form'\r\nexport default function Index({ team }) {\r\n  const [board, setBoard] = useState(null)\r\n\r\n  const { register: register2, handleSubmit: handleSubmit2 } = useForm()\r\n\r\n  const [modal, setModal] = useState({ visible: false, table: null })\r\n\r\n  const move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source)\r\n    const destClone = Array.from(destination)\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1)\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed)\r\n\r\n    const result = {}\r\n    result[droppableSource.droppableId] = sourceClone\r\n    result[droppableDestination.droppableId] = destClone\r\n\r\n    return result\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result\r\n    console.log(result)\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return\r\n    }\r\n    const sInd = +source.droppableId\r\n    const dInd = +destination.droppableId\r\n\r\n    const items = Array.from(board)\r\n    if (sInd === dInd) {\r\n      const [reorderedItem] = items[sInd]['assignments'].splice(\r\n        result.source.index,\r\n        1\r\n      )\r\n      items[sInd]['assignments'].splice(\r\n        result.destination.index,\r\n        0,\r\n        reorderedItem\r\n      )\r\n      console.log(items)\r\n      setBoard(items)\r\n    } else {\r\n      const result = move(\r\n        items[sInd]['assignments'],\r\n        items[dInd]['assignments'],\r\n        source,\r\n        destination\r\n      )\r\n\r\n      const newState = [...board]\r\n      newState[sInd]['assignments'] = result[sInd]\r\n      newState[dInd]['assignments'] = result[dInd]\r\n      updateDB([newState[sInd], newState[dInd]])\r\n      setBoard(newState)\r\n    }\r\n  }\r\n\r\n  const deleteAssignment = (data) => {\r\n    console.log(data)\r\n    axios\r\n      .post(`https://localhost:5001/api/Dashboard/DeleteAssignment`, {\r\n        team: team,\r\n        table: data.table,\r\n        title: data.title\r\n      })\r\n      .then((x) => {\r\n        getDashboard()\r\n      })\r\n  }\r\n\r\n  const updateDB = (tables) => {\r\n    axios\r\n      .post(`https://localhost:5001/api/Dashboard/UpdateTables`, {\r\n        team: team,\r\n        tables: tables\r\n      })\r\n      .then((x) => {\r\n        getDashboard()\r\n      })\r\n  }\r\n\r\n  const getDashboard = () => {\r\n    axios.get(`https://localhost:5001/api/Dashboard?team=${team}`).then((x) => {\r\n      if (!x.data.hasError) setBoard(x.data.dashboard['tables'])\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (team) getDashboard()\r\n  }, [team])\r\n\r\n  const { register, handleSubmit, watch, errors } = useForm()\r\n\r\n  const createAssignment = (data) => {\r\n    axios\r\n      .post(`https://localhost:5001/api/dashboard/AddAssignment`, {\r\n        tableName: modal.table,\r\n        assignment: {\r\n          title: data.title,\r\n          content: data.content\r\n        },\r\n        team: team\r\n      })\r\n      .then((x) => {\r\n        if (!x.data.hasError) {\r\n          getDashboard()\r\n        }\r\n      })\r\n  }\r\n\r\n  const createTable = (data) => {\r\n    axios\r\n      .post('https://localhost:5001/api/Dashboard/CreateTable', {\r\n        team: team,\r\n        tableName: data.tableName\r\n      })\r\n      .then((x) => {\r\n        if (!x.data.hasError) {\r\n          getDashboard()\r\n        }\r\n      })\r\n  }\r\n\r\n  const removeTable = (data) => {\r\n    axios\r\n      .post('https://localhost:5001/api/Dashboard/DeleteTable', {\r\n        team: team,\r\n        tableName: data\r\n      })\r\n      .then((x) => {\r\n        if (!x.data.hasError) {\r\n          getDashboard()\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.form}>\r\n        <CreateTableComp\r\n          handleSubmit2={handleSubmit2}\r\n          register2={register2}\r\n          createTable={createTable}\r\n        />\r\n      </div>\r\n      <div className={styles.board}>\r\n        {modal.visible && (\r\n          <div className={styles.modal}>\r\n            <div\r\n              className={styles.modalOverlay}\r\n              onClick={() => setModal({ visible: false, table: null })}\r\n            ></div>\r\n            <div className={styles.modalContent}>\r\n              <span className={styles.modalTitle}>Yeni Görev ekle</span>\r\n              <div>\r\n                <CreateAssignmentComp\r\n                  handleSubmit={handleSubmit}\r\n                  register={register}\r\n                  createAssignment={createAssignment}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {board &&\r\n            board.map((x, i) => {\r\n              return (\r\n                <Droppable droppableId={`${i}`}>\r\n                  {(provided) => (\r\n                    <ul\r\n                      className={styles.table}\r\n                      {...provided.droppableProps}\r\n                      ref={provided.innerRef}\r\n                    >\r\n                      <div className={styles.remove}>\r\n                        <span\r\n                          onClick={() => {\r\n                            removeTable(x['tableName'])\r\n                          }}\r\n                        >\r\n                          X\r\n                        </span>\r\n                      </div>\r\n                      <div className={styles.top}>\r\n                        <span className={styles.tableName}>{x.tableName}</span>\r\n\r\n                        <Button\r\n                          className={styles.addButton}\r\n                          onClick={() => {\r\n                            setModal({ visible: true, table: x['tableName'] })\r\n                          }}\r\n                        >\r\n                          EKLE\r\n                        </Button>\r\n                      </div>\r\n                      {board &&\r\n                        x['assignments'].map((y, i) => {\r\n                          return (\r\n                            <DraggableComp\r\n                              i={i}\r\n                              y={y}\r\n                              x={x}\r\n                              deleteAssignment={deleteAssignment}\r\n                            />\r\n                          )\r\n                        })}\r\n                      {provided.placeholder}\r\n                    </ul>\r\n                  )}\r\n                </Droppable>\r\n              )\r\n            })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const CreateTableComp = ({ handleSubmit2, register2, createTable }) => {\r\n  return (\r\n    <form id=\"2\" onSubmit={handleSubmit2(createTable)}>\r\n      <Input\r\n        className={styles.teamInput}\r\n        name=\"tableName\"\r\n        placeholder=\"Tablo Adı\"\r\n        referance={register2({ required: true })}\r\n      />\r\n      <Button className={styles.addTeamButton}>Tablo Ekle</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const CreateAssignmentComp = ({\r\n  handleSubmit,\r\n  register,\r\n  createAssignment\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit(createAssignment)}>\r\n      <Input\r\n        name=\"title\"\r\n        className={styles.input}\r\n        placeholder=\"Başlık\"\r\n        referance={register({ required: true })}\r\n      />\r\n      <Input\r\n        name=\"content\"\r\n        className={styles.input}\r\n        placeholder=\"İçerik\"\r\n        referance={register({ required: true })}\r\n      />\r\n      <Button>Gönder</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const DraggableComp = ({ i, y, x, deleteAssignment }) => {\r\n  return (\r\n    <Draggable key={i} draggableId={y['title']} index={i}>\r\n      {(provided) => (\r\n        <li\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <div>{y['title']}</div>\r\n          <span\r\n            onClick={() =>\r\n              deleteAssignment({\r\n                title: y['title'],\r\n                table: x['tableName']\r\n              })\r\n            }\r\n          >\r\n            X\r\n          </span>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n","D:\\react\\weekly-planner\\src\\helpers\\apiUtils.js",[],"D:\\react\\weekly-planner\\src\\rtk\\store.js",[],"D:\\react\\weekly-planner\\src\\rtk\\auth\\authSlice.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":27,"column":6,"nodeType":"101","endLine":27,"endColumn":8,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":9,"column":23,"nodeType":"105","messageId":"106","endLine":9,"endColumn":34},{"ruleId":"107","severity":1,"message":"108","line":25,"column":1,"nodeType":"109","endLine":25,"endColumn":40},{"ruleId":"95","replacedBy":"110"},{"ruleId":"97","replacedBy":"111"},{"ruleId":"103","severity":1,"message":"112","line":10,"column":9,"nodeType":"105","messageId":"106","endLine":10,"endColumn":13},{"ruleId":"99","severity":1,"message":"113","line":100,"column":6,"nodeType":"101","endLine":100,"endColumn":12,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"115","line":102,"column":35,"nodeType":"105","messageId":"106","endLine":102,"endColumn":40},{"ruleId":"103","severity":1,"message":"116","line":102,"column":42,"nodeType":"105","messageId":"106","endLine":102,"endColumn":48},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'dispatch' and 'jwtToken'. Either include them or remove the dependency array.","ArrayExpression",["119"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["117"],["118"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDashboard'. Either include it or remove the dependency array.",["120"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [dispatch, jwtToken]",{"range":"125","text":"126"},"Update the dependencies array to be: [getDashboard, team]",{"range":"127","text":"128"},[827,829],"[dispatch, jwtToken]",[2810,2816],"[getDashboard, team]"]